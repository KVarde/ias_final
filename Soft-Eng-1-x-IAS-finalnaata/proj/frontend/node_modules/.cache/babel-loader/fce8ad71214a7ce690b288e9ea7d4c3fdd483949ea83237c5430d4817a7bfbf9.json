{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kian\\\\Desktop\\\\Soft-Eng-1-x-IAS-finalnaata\\\\Soft-Eng-1-x-IAS-finalnaata\\\\proj\\\\frontend\\\\src\\\\components\\\\MedsList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./MedsList.css\";\nimport Medicineitem from \"./Medicineitem\"; // Assuming Medicineitem is your component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MedsList = () => {\n  _s();\n  const [medicines, setMedicines] = useState([]);\n  useEffect(() => {\n    const fetchMeds = async () => {\n      try {\n        const response = await axios.get(\"http://127.0.0.1:8000/app/meds/\");\n        setMedicines(response.data.reverse()); // Reverse the array before setting it\n      } catch (error) {\n        console.error(\"Error fetching medicines:\", error);\n      }\n    };\n    fetchMeds();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cardsmed\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"MEDICINE INFORMATION\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards__containerprod\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cards__wrapperprod\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cards__itemsprod\",\n          children: medicines.map(medicine => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Medicineitem, {\n              src: medicine.image // Replace 'src' with the image field in your model\n              ,\n              text: medicine.medName // Replace 'text' with the name field in your model\n              ,\n              label: \"Medicine\" // Label or any specific information\n              ,\n              path: `/meds/${medicine.medId}` // Path based on the ID\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 17\n            }, this)\n          }, medicine.medId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(MedsList, \"ZxXDyD5zuog6csW41MwgtHmUf9w=\");\n_c = MedsList;\nexport default MedsList;\nvar _c;\n$RefreshReg$(_c, \"MedsList\");","map":{"version":3,"names":["React","useState","useEffect","axios","Medicineitem","jsxDEV","_jsxDEV","MedsList","_s","medicines","setMedicines","fetchMeds","response","get","data","reverse","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","medicine","src","image","text","medName","label","path","medId","_c","$RefreshReg$"],"sources":["C:/Users/Kian/Desktop/Soft-Eng-1-x-IAS-finalnaata/Soft-Eng-1-x-IAS-finalnaata/proj/frontend/src/components/MedsList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./MedsList.css\";\nimport Medicineitem from \"./Medicineitem\"; // Assuming Medicineitem is your component\n\nconst MedsList = () => {\n  const [medicines, setMedicines] = useState([]);\n\n  useEffect(() => {\n    const fetchMeds = async () => {\n      try {\n        const response = await axios.get(\"http://127.0.0.1:8000/app/meds/\");\n        setMedicines(response.data.reverse()); // Reverse the array before setting it\n      } catch (error) {\n        console.error(\"Error fetching medicines:\", error);\n      }\n    };\n\n    fetchMeds();\n  }, []);\n\n  return (\n    <div className=\"cardsmed\">\n      <h1>MEDICINE INFORMATION</h1>\n      <div className=\"cards__containerprod\">\n        <div className=\"cards__wrapperprod\">\n          <div className=\"cards__itemsprod\">\n            {medicines.map((medicine) => (\n              <div key={medicine.medId}>\n                <Medicineitem\n                  src={medicine.image} // Replace 'src' with the image field in your model\n                  text={medicine.medName} // Replace 'text' with the name field in your model\n                  label=\"Medicine\" // Label or any specific information\n                  path={`/meds/${medicine.medId}`} // Path based on the ID\n                />\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MedsList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,gBAAgB;AACvB,OAAOC,YAAY,MAAM,gBAAgB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACd,MAAMS,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAC,iCAAiC,CAAC;QACnEH,YAAY,CAACE,QAAQ,CAACE,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;MACzC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;IACF,CAAC;IAEDL,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAKY,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACvBb,OAAA;MAAAa,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7BjB,OAAA;MAAKY,SAAS,EAAC,sBAAsB;MAAAC,QAAA,eACnCb,OAAA;QAAKY,SAAS,EAAC,oBAAoB;QAAAC,QAAA,eACjCb,OAAA;UAAKY,SAAS,EAAC,kBAAkB;UAAAC,QAAA,EAC9BV,SAAS,CAACe,GAAG,CAAEC,QAAQ,iBACtBnB,OAAA;YAAAa,QAAA,eACEb,OAAA,CAACF,YAAY;cACXsB,GAAG,EAAED,QAAQ,CAACE,KAAM,CAAC;cAAA;cACrBC,IAAI,EAAEH,QAAQ,CAACI,OAAQ,CAAC;cAAA;cACxBC,KAAK,EAAC,UAAU,CAAC;cAAA;cACjBC,IAAI,EAAG,SAAQN,QAAQ,CAACO,KAAM,EAAE,CAAC;YAAA;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClC;UAAC,GANME,QAAQ,CAACO,KAAK;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAOnB,CACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACf,EAAA,CArCID,QAAQ;AAAA0B,EAAA,GAAR1B,QAAQ;AAuCd,eAAeA,QAAQ;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}