{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import axios from\"axios\";import\"./MedsList.css\";import Medicineitem from\"./Medicineitem\";// Assuming Medicineitem is your component\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const MedsList=()=>{const[medicines,setMedicines]=useState([]);useEffect(()=>{const fetchMeds=async()=>{try{const response=await axios.get(\"http://127.0.0.1:8000/app/meds/\");setMedicines(response.data.reverse());// Reverse the array before setting it\n}catch(error){console.error(\"Error fetching medicines:\",error);}};fetchMeds();},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"cardsmed\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"MEDICINE INFORMATION\"}),/*#__PURE__*/_jsx(\"div\",{className:\"cards__containerprod\",children:/*#__PURE__*/_jsx(\"div\",{className:\"cards__wrapperprod\",children:/*#__PURE__*/_jsx(\"div\",{className:\"cards__itemsprod\",children:medicines.map(medicine=>/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Medicineitem,{src:medicine.image// Replace 'src' with the image field in your model\n,text:medicine.medName// Replace 'text' with the name field in your model\n,label:\"Medicine\"// Label or any specific information\n,path:\"/meds/\".concat(medicine.medId)// Path based on the ID\n})},medicine.medId))})})})]});};export default MedsList;","map":{"version":3,"names":["React","useState","useEffect","axios","Medicineitem","jsx","_jsx","jsxs","_jsxs","MedsList","medicines","setMedicines","fetchMeds","response","get","data","reverse","error","console","className","children","map","medicine","src","image","text","medName","label","path","concat","medId"],"sources":["C:/Users/Kian/Desktop/Soft-Eng-1-x-IAS-finalnaata/Soft-Eng-1-x-IAS-finalnaata/proj/frontend/src/components/MedsList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./MedsList.css\";\nimport Medicineitem from \"./Medicineitem\"; // Assuming Medicineitem is your component\n\nconst MedsList = () => {\n  const [medicines, setMedicines] = useState([]);\n\n  useEffect(() => {\n    const fetchMeds = async () => {\n      try {\n        const response = await axios.get(\"http://127.0.0.1:8000/app/meds/\");\n        setMedicines(response.data.reverse()); // Reverse the array before setting it\n      } catch (error) {\n        console.error(\"Error fetching medicines:\", error);\n      }\n    };\n\n    fetchMeds();\n  }, []);\n\n  return (\n    <div className=\"cardsmed\">\n      <h1>MEDICINE INFORMATION</h1>\n      <div className=\"cards__containerprod\">\n        <div className=\"cards__wrapperprod\">\n          <div className=\"cards__itemsprod\">\n            {medicines.map((medicine) => (\n              <div key={medicine.medId}>\n                <Medicineitem\n                  src={medicine.image} // Replace 'src' with the image field in your model\n                  text={medicine.medName} // Replace 'text' with the name field in your model\n                  label=\"Medicine\" // Label or any specific information\n                  path={`/meds/${medicine.medId}`} // Path based on the ID\n                />\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MedsList;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,MAAO,gBAAgB,CACvB,MAAO,CAAAC,YAAY,KAAM,gBAAgB,CAAE;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE3C,KAAM,CAAAC,QAAQ,CAAGA,CAAA,GAAM,CACrB,KAAM,CAACC,SAAS,CAAEC,YAAY,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CAE9CC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAU,SAAS,CAAG,KAAAA,CAAA,GAAY,CAC5B,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAV,KAAK,CAACW,GAAG,CAAC,iCAAiC,CAAC,CACnEH,YAAY,CAACE,QAAQ,CAACE,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAAE;AACzC,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,CAAEA,KAAK,CAAC,CACnD,CACF,CAAC,CAEDL,SAAS,CAAC,CAAC,CACb,CAAC,CAAE,EAAE,CAAC,CAEN,mBACEJ,KAAA,QAAKW,SAAS,CAAC,UAAU,CAAAC,QAAA,eACvBd,IAAA,OAAAc,QAAA,CAAI,sBAAoB,CAAI,CAAC,cAC7Bd,IAAA,QAAKa,SAAS,CAAC,sBAAsB,CAAAC,QAAA,cACnCd,IAAA,QAAKa,SAAS,CAAC,oBAAoB,CAAAC,QAAA,cACjCd,IAAA,QAAKa,SAAS,CAAC,kBAAkB,CAAAC,QAAA,CAC9BV,SAAS,CAACW,GAAG,CAAEC,QAAQ,eACtBhB,IAAA,QAAAc,QAAA,cACEd,IAAA,CAACF,YAAY,EACXmB,GAAG,CAAED,QAAQ,CAACE,KAAO;AAAA,CACrBC,IAAI,CAAEH,QAAQ,CAACI,OAAS;AAAA,CACxBC,KAAK,CAAC,UAAW;AAAA,CACjBC,IAAI,UAAAC,MAAA,CAAWP,QAAQ,CAACQ,KAAK,CAAI;AAAA,CAClC,CAAC,EANMR,QAAQ,CAACQ,KAOd,CACN,CAAC,CACC,CAAC,CACH,CAAC,CACH,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAArB,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}